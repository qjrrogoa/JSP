<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  <display-name>JSPProj</display-name>
  <!-- 서블릿 등록 -->
  <servlet>
  	<servlet-name>SERVLET_HELLO</servlet-name>
  	<servlet-class>controller.HelloServlet</servlet-class>
  </servlet>
  <!--요청 URL매핑 -->
  <servlet-mapping>
  	<servlet-name>SERVLET_HELLO</servlet-name>
  	<url-pattern>/HelloServlet.do</url-pattern>
  </servlet-mapping>
  
  <servlet>
  	<servlet-name>CALCULATOR</servlet-name>
  	<servlet-class>controller.CalculatorServlet</servlet-class>  	
  </servlet>
  <servlet-mapping>
  	<servlet-name>CALCULATOR</servlet-name>
  	<url-pattern>/Calculator.kosmo</url-pattern>
  </servlet-mapping>
 
  <servlet>
  	<servlet-name>CONTENT_TYPE</servlet-name>
  	<servlet-class>controller.ContentTypeServlet</servlet-class>
  </servlet>  
  <servlet-mapping>
  	<servlet-name>CONTENT_TYPE</servlet-name>
  	<url-pattern>/AniDir/SomeDir/SetContentType.kosmo</url-pattern>
  </servlet-mapping>
  <!-- 컨텍스트 초기화 파라미터 등록 -->
  <context-param>
  	<param-name>ORACLE_URL</param-name>
  	<param-value>jdbc:oracle:thin:@localhost:1521:xe</param-value>
  </context-param>
  <context-param>
  	<param-name>ORACLE_DRIVER</param-name>
  	<param-value>oracle.jdbc.OracleDriver</param-value>  
  </context-param>
  <!-- 해당 JSP페이지에서만 사용가능한 서블릿 초기화 파라미터 등록 (효용도 떨어짐) -->
  <servlet>
  	<servlet-name>APPLICATION01_JSP</servlet-name>
  	<jsp-file>/InnerObject03/Application01.jsp</jsp-file>
  	<init-param>
  		<param-name>SERVLET_INIT</param-name>
  		<param-value>서블릿 초기화 파리미터 입니다</param-value>
  	</init-param>
  </servlet>
  <servlet-mapping>
  	<servlet-name>APPLICATION01_JSP</servlet-name>
  	<url-pattern>/InnerObject03/Application01.jsp</url-pattern>
  </servlet-mapping>
  <!-- 회원제 게시판 페이징관련 컨텍스트 초기화 파라미터-->
  <context-param>
  	<param-name>PAGE_SIZE</param-name>
  	<param-value>2</param-value>
  </context-param>
  <context-param>
  	<param-name>BLOCK_PAGE</param-name>
  	<param-value>3</param-value>
  </context-param>
  
  
  <!-- 세션의 유효시간 설정(분단위) -->
  <session-config>
        <session-timeout>60</session-timeout>
  </session-config>
  
  <jsp-config>
  	<taglib>
  		<taglib-uri>
  			/WEB-INF/tlds/mytag.tld
  		</taglib-uri>
  		<taglib-location>
  			/WEB-INF/tlds/mytag.tld
  		</taglib-location>
  	</taglib>  
  </jsp-config>
  
  <!-- 커넥션 풀 사용하기 위한 JNDI 루트 등록 -->
  <context-param>
  
  	<param-name>JNDI_ROOT</param-name>
  	<param-value>java:comp/env</param-value>
  </context-param>
  <!-- 서블릿 연습하기 -->
  <servlet>
  	<!-- 서블릿 명:임의로 지정 -->
  	<servlet-name>GET_SERVLET</servlet-name>
  	<!-- 서블릿 클래스의 패키지를 포함한 경로 -->
  	<servlet-class>controller.servlet.GetController</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>GET_SERVLET</servlet-name>
  	<!-- 사용자 요청 URL패턴:반드시 / 로 시작하는 패턴:디렉토리구조와 무관 -->
  	<url-pattern>/Basic/get.kosmo</url-pattern>
  </servlet-mapping>
  
  <servlet>
  	<!-- 서블릿 명:임의로 지정 -->
  	<servlet-name>POST_SERVLET</servlet-name>
  	<!-- 서블릿 클래스의 패키지를 포함한 경로 -->
  	<servlet-class>controller.servlet.PostController</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>POST_SERVLET</servlet-name>
  	<!-- 사용자 요청 URL패턴:반드시 / 로 시작하는 패턴:디렉토리구조와 무관 -->
  	<url-pattern>/Basic/post.kosmo</url-pattern>
  </servlet-mapping>
  
  
  <servlet>
  	<!-- 서블릿 명:임의로 지정 -->
  	<servlet-name>BOTH_SERVLET</servlet-name>
  	<!-- 서블릿 클래스의 패키지를 포함한 경로 -->
  	<servlet-class>controller.servlet.BothController</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>BOTH_SERVLET</servlet-name>
  	<!-- 사용자 요청 URL패턴:반드시 / 로 시작하는 패턴:디렉토리구조와 무관 -->
  	<url-pattern>/Basic/both.kosmo</url-pattern>
  </servlet-mapping>
  
  <servlet>
  	<!-- 서블릿 명:임의로 지정 -->
  	<servlet-name>MULTI_SERVLET</servlet-name>
  	<!-- 서블릿 클래스의 패키지를 포함한 경로 -->
  	<servlet-class>controller.servlet.MultiController</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>MULTI_SERVLET</servlet-name>
  	<!-- 사용자 요청 URL패턴:반드시 / 로 시작하는 패턴:디렉토리구조와 무관 -->
  	<url-pattern>/Basic/multi.kosmo</url-pattern>
  </servlet-mapping>
  
  <servlet>
  	<servlet-name>FIRST_SERVLET</servlet-name>
  	<servlet-class>controller.servlet.FirstController</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>FIRST_SERVLET</servlet-name>
  	<url-pattern>/Basic/first.kosmo</url-pattern>
  </servlet-mapping>
  
  <servlet>
  	<servlet-name>SECOND_SERVLET</servlet-name>
  	<servlet-class>controller.servlet.SecondController</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>SECOND_SERVLET</servlet-name>
  	<url-pattern>/Basic/second.kosmo</url-pattern>
  </servlet-mapping>
  
  <!-- 자료실을 위한 서블릿 등록 -->
  <!-- 사용자 요청을 처리할 서블릿 등록:메인 페이지로 이동 요청용 -->
  <servlet>
  	<!-- 서블릿 명:임의로 지정 -->
  	<servlet-name>DataRoomIndex</servlet-name>
  	<!-- 서블릿 클래스의 패키지를 포함한 경로 -->
  	<servlet-class>controller.dataroom.IndexController</servlet-class>
  </servlet>
  <!-- URL패턴(요청URL)을 서블릿에 매핑 -->
  <servlet-mapping>
  	<servlet-name>DataRoomIndex</servlet-name>
  	<!-- 사용자 요청 URL패턴:반드시 / 로 시작하는 패턴:디렉토리구조와 무관 -->
  	<url-pattern>/DataRoom/Index.kosmo</url-pattern>
  </servlet-mapping>
  
  <!-- 목록요청 처리용 -->
  <servlet>
  	<servlet-name>DataRoomList</servlet-name>
  	<servlet-class>controller.dataroom.ListController</servlet-class>
  	<!-- ListController의 서블릿 초기화 파라미터 -->
  	<init-param>
  		<param-name>PAGE_SIZE</param-name>
  		<param-value>2</param-value>
  	</init-param>
  	<init-param>
  		<param-name>BLOCK_PAGE</param-name>
  		<param-value>2</param-value>
  	</init-param>
  </servlet>
  <servlet-mapping>
  	<servlet-name>DataRoomList</servlet-name>
  	<url-pattern>/DataRoom/List.kosmo</url-pattern>
  </servlet-mapping>
  <!-- 하나의 컨트롤러 입력폼으로 이동 및 입력처리 요청을 처리 -->
  <servlet>
  	<servlet-name>DataRoomWrite</servlet-name>
  	<servlet-class>controller.dataroom.WriteController</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>DataRoomWrite</servlet-name>
  	<url-pattern>/DataRoom/Write.kosmo</url-pattern>
  </servlet-mapping>
  
  <!-- 상세보기용 -->
  <servlet>
  	<servlet-name>DataRoomView</servlet-name>
  	<servlet-class>controller.dataroom.ViewController</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>DataRoomView</servlet-name>
  	<url-pattern>/DataRoom/View.kosmo</url-pattern>
  </servlet-mapping>
  <!-- 패스워드 체크용 -->
  <servlet>
  	<servlet-name>DataRoomPassword</servlet-name>
  	<servlet-class>controller.dataroom.PasswordController</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>DataRoomPassword</servlet-name>
  	<url-pattern>/DataRoom/Password.kosmo</url-pattern>
  </servlet-mapping>
  <!-- 하나의 컨트롤러 수정폼으로 이동 및 수정처리 요청을 처리 -->
  <servlet>
  	<servlet-name>DataRoomEdit</servlet-name>
  	<servlet-class>controller.dataroom.EditController</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>DataRoomEdit</servlet-name>
  	<url-pattern>/DataRoom/Edit.kosmo</url-pattern>
  </servlet-mapping>
  <!-- 다운로드 요청 처리용 -->
  <servlet>
  	<servlet-name>DataRoomDownload</servlet-name>
  	<servlet-class>controller.dataroom.DownloadController</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>DataRoomDownload</servlet-name>
  	<url-pattern>/DataRoom/Download.kosmo</url-pattern>
  </servlet-mapping>
  
  <welcome-file-list>
  	<welcome-file>index.jsp</welcome-file>
  	<welcome-file>HelloWorld.jsp</welcome-file>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>    
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
</web-app>